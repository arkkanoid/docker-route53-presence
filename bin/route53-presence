#!/usr/bin/python
#
# Register the local EC2 instance with route53, replacing any existing record.
# Loop to remain active.

import argparse
import os
import time
import sys

import boto
from boto.route53.record import ResourceRecordSets
import requests

def get_zone_id(hostname):
  domainname = '.'.join(hostname.split('.')[-2:])
  zone = conn.get_hosted_zone_by_name(domainname)
  if not zone:
    print "Sorry, you don't have access to that domain!"
    exit(1)
  return zone.GetHostedZoneResponse.Id.split('/')[2]

def get_public_ip():
  return requests.get("http://169.254.169.254/latest/meta-data/public-ipv4").content

def register(hostname, instance_ip, ttl):
  change = ResourceRecordSets(conn, zone_id)
  change.add_change_record("UPSERT",boto.route53.record.Record(name=hostname,
                                                     type="A",
                                                     resource_records=instance_ip,
                                                     alias_hosted_zone_id=zone_id))
  return change.commit()

hostname_public = os.environ.get('HOSTNAME_PUBLIC')
conn = boto.connect_route53(os.environ.get('AWS_ACCESS_KEY'), os.environ.get('AWS_SECRET_KEY'))
zone_id = get_zone_id(hostname_public)

result_public = register(hostname_public, get_public_ip(), 60)
if not result_public:
  exit(1)

sys.stdout.flush()

while True:
  time.sleep(5)